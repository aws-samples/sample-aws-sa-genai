{
 "Parameters": {
  "CloudtrailLocation": {
   "Type": "String",
   "Description": "Enter the location of your trail as specified in the Cloudtrail console, start with s3://, end with CloudTrail/. example: s3://cloudtrail-awslogs-123456789123-do-not-delete/AWSLogs/123456789123/CloudTrail/",
   "MinLength": 1
  },
  "StartDateParameter": {
   "Type": "String",
   "Description": "Input the start date for the data in the Cloudtrail bucket in YYYY/MM/DD format. For example, if the earliest data in the bucket is from 1st August 2021, use 2021/08/01",
   "MinLength": 10
  },
  "CURSourceTable": {
   "Type": "String",
   "AllowedPattern": "^[a-zA-Z0-9_-]+\\.[a-zA-Z0-9_-]+$",
   "ConstraintDescription": "Must be in format database.table_name",
   "Description": "Provide CUR database and table name with format database.table_name as it exists in your account (e.g., billing.cur)",
   "MinLength": 3
  },
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Resources": {
  "adminconsoledb2025": {
   "Type": "AWS::Glue::Database",
   "Properties": {
    "CatalogId": {
     "Ref": "AWS::AccountId"
    },
    "DatabaseInput": {
     "Name": "admin-console-2025"
    }
   },
   "Metadata": {
    "aws:cdk:path": "QuickAdminSuiteDataModelStack/adminconsoledb2025"
   }
  },
  "groupmembership": {
   "Type": "AWS::Glue::Table",
   "Properties": {
    "CatalogId": {
     "Ref": "AWS::AccountId"
    },
    "DatabaseName": {
     "Ref": "adminconsoledb2025"
    },
    "TableInput": {
     "Description": "group and user information which is generated by the etl_job_admin_suite_assets_access glue job",
     "Name": "group_membership",
     "Parameters": {
      "has_encrypted_data": "false",
      "classification": "csv",
      "areColumnsQuoted": "false",
      "typeOfData": "file",
      "columnsOrdered": "true",
      "delimiter": ","
     },
     "StorageDescriptor": {
      "Columns": [
       {
        "Comment": "aws account_id",
        "Name": "account_id",
        "Type": "string"
       },
       {
        "Comment": "quicksight namespace",
        "Name": "namespace",
        "Type": "string"
       },
       {
        "Comment": "quicksight group",
        "Name": "group",
        "Type": "string"
       },
       {
        "Comment": "quicksight user",
        "Name": "user",
        "Type": "string"
       },
       {
        "Comment": "email of quicksight user",
        "Name": "email",
        "Type": "string"
       },
       {
        "Comment": "role of quicksight user: admin, author, reader",
        "Name": "role",
        "Type": "string"
       },
       {
        "Comment": "identity_type of quicksight user: IAM, quicksight",
        "Name": "identity_type",
        "Type": "string"
       },
       {
        "Comment": "arn of user",
        "Name": "user_arn",
        "Type": "string"
       }
      ],
      "Compressed": false,
      "InputFormat": "org.apache.hadoop.mapred.TextInputFormat",
      "Location": {
       "Fn::Join": [
        "",
        [
         "s3://admin-console-new-",
         {
          "Ref": "AWS::AccountId"
         },
         "/monitoring/quicksight/group_membership"
        ]
       ]
      },
      "OutputFormat": "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat",
      "SerdeInfo": {
       "Parameters": {
        "field.delim": ","
       },
       "SerializationLibrary": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe"
      },
      "StoredAsSubDirectories": false
     },
     "TableType": "EXTERNAL_TABLE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "QuickAdminSuiteDataModelStack/groupmembership"
   }
  },
  "objectaccess": {
   "Type": "AWS::Glue::Table",
   "Properties": {
    "CatalogId": {
     "Ref": "AWS::AccountId"
    },
    "DatabaseName": {
     "Ref": "adminconsoledb2025"
    },
    "TableInput": {
     "Description": "objects and access information which is generated by the etl_job_admin_suite_assets_access glue job",
     "Name": "object_access",
     "Parameters": {
      "has_encrypted_data": "false",
      "classification": "csv",
      "areColumnsQuoted": "false",
      "typeOfData": "file",
      "columnsOrdered": "true",
      "delimiter": ","
     },
     "StorageDescriptor": {
      "Columns": [
       {
        "Comment": "aws account_id",
        "Name": "account_id",
        "Type": "string"
       },
       {
        "Comment": "aws region name",
        "Name": "aws_region",
        "Type": "string"
       },
       {
        "Comment": "quicksight object type: dashboard, dataset and etc..",
        "Name": "object_type",
        "Type": "string"
       },
       {
        "Comment": "quicksight object name",
        "Name": "object_name",
        "Type": "string"
       },
       {
        "Comment": "quicksight object id",
        "Name": "object_id",
        "Type": "string"
       },
       {
        "Comment": "quicksight principal type",
        "Name": "principal_type",
        "Type": "string"
       },
       {
        "Comment": "quicksight principal name",
        "Name": "principal_name",
        "Type": "string"
       },
       {
        "Comment": "quicksight principal arn",
        "Name": "arn",
        "Type": "string"
       },
       {
        "Comment": "quicksight namespace",
        "Name": "namespace",
        "Type": "string"
       },
       {
        "Comment": "access permissions of quicksight objects: who can do what on a dashboard",
        "Name": "permissions",
        "Type": "string"
       }
      ],
      "Compressed": false,
      "InputFormat": "org.apache.hadoop.mapred.TextInputFormat",
      "Location": {
       "Fn::Join": [
        "",
        [
         "s3://admin-console-new-",
         {
          "Ref": "AWS::AccountId"
         },
         "/monitoring/quicksight/object_access"
        ]
       ]
      },
      "OutputFormat": "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat",
      "SerdeInfo": {
       "Parameters": {
        "field.delim": ","
       },
       "SerializationLibrary": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe"
      },
      "StoredAsSubDirectories": false
     },
     "TableType": "EXTERNAL_TABLE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "QuickAdminSuiteDataModelStack/objectaccess"
   }
  },
  "datasetsproperties": {
   "Type": "AWS::Glue::Table",
   "Properties": {
    "CatalogId": {
     "Ref": "AWS::AccountId"
    },
    "DatabaseName": {
     "Ref": "adminconsoledb2025"
    },
    "TableInput": {
     "Description": "datasets properties information which is generated by the etl_job_admin_suite_ds_properties job",
     "Name": "datasets_properties",
     "Parameters": {
      "classification": "csv",
      "skip.header.line.count": "1"
     },
     "StorageDescriptor": {
      "Columns": [
       {
        "Comment": "aws region name",
        "Name": "region",
        "Type": "string"
       },
       {
        "Comment": "dataset id",
        "Name": "dataset_id",
        "Type": "string"
       },
       {
        "Comment": "dataset name",
        "Name": "name",
        "Type": "string"
       },
       {
        "Comment": "last updated time",
        "Name": "last_updated_time",
        "Type": "string"
       },
       {
        "Comment": "import mode (SPICE or DIRECT_QUERY)",
        "Name": "import_mode",
        "Type": "string"
       },
       {
        "Comment": "consumed SPICE capacity in bytes",
        "Name": "consumed_spice_capacity_bytes",
        "Type": "string"
       },
       {
        "Comment": "rows ingested",
        "Name": "rows_ingested",
        "Type": "string"
       },
       {
        "Comment": "rows dropped",
        "Name": "rows_dropped",
        "Type": "string"
       },
       {
        "Comment": "refresh triggered time",
        "Name": "refresh_triggered_time",
        "Type": "string"
       },
       {
        "Comment": "refresh time in seconds",
        "Name": "refresh_time_seconds",
        "Type": "string"
       },
       {
        "Comment": "request source",
        "Name": "request_source",
        "Type": "string"
       },
       {
        "Comment": "request type",
        "Name": "request_type",
        "Type": "string"
       },
       {
        "Comment": "ingestion status",
        "Name": "ingestion_status",
        "Type": "string"
       },
       {
        "Comment": "error info type",
        "Name": "error_info_type",
        "Type": "string"
       },
       {
        "Comment": "error info message",
        "Name": "error_info_message",
        "Type": "string"
       },
       {
        "Comment": "principal type",
        "Name": "principal_type",
        "Type": "string"
       },
       {
        "Comment": "principal name",
        "Name": "principal",
        "Type": "string"
       },
       {
        "Comment": "additional info",
        "Name": "additional_info",
        "Type": "string"
       },
       {
        "Comment": "actions",
        "Name": "actions",
        "Type": "string"
       },
       {
        "Comment": "is file indicator",
        "Name": "is_file",
        "Type": "string"
       }
      ],
      "Compressed": false,
      "InputFormat": "org.apache.hadoop.mapred.TextInputFormat",
      "Location": {
       "Fn::Join": [
        "",
        [
         "s3://admin-console-new-",
         {
          "Ref": "AWS::AccountId"
         },
         "/monitoring/quicksight/datasets_properties"
        ]
       ]
      },
      "OutputFormat": "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat",
      "SerdeInfo": {
       "Parameters": {
        "field.delim": ","
       },
       "SerializationLibrary": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe"
      },
      "StoredAsSubDirectories": false
     },
     "TableType": "EXTERNAL_TABLE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "QuickAdminSuiteDataModelStack/datasetsproperties"
   }
  },
  "DatasourcePropertyTable": {
   "Type": "AWS::Glue::Table",
   "Properties": {
    "CatalogId": {
     "Ref": "AWS::AccountId"
    },
    "DatabaseName": "admin-console-2025",
    "TableInput": {
     "Description": "QuickSight dataset to datasource dependency mapping",
     "Name": "datasource_property",
     "StorageDescriptor": {
      "Columns": [
       {
        "Comment": "AWS region",
        "Name": "region",
        "Type": "string"
       },
       {
        "Comment": "data source name",
        "Name": "datasource_name",
        "Type": "string"
       },
       {
        "Comment": "data source ID",
        "Name": "datasource_id",
        "Type": "string"
       },
       {
        "Comment": "dataset name",
        "Name": "dataset_name",
        "Type": "string"
       },
       {
        "Comment": "data source type",
        "Name": "datasource_type",
        "Type": "string"
       },
       {
        "Comment": "dataset ID",
        "Name": "dataset_id",
        "Type": "string"
       },
       {
        "Comment": "dataset last updated time",
        "Name": "dataset_last_updated_time",
        "Type": "string"
       },
       {
        "Comment": "dataset created time",
        "Name": "dataset_created_time",
        "Type": "string"
       }
      ],
      "Compressed": false,
      "InputFormat": "org.apache.hadoop.mapred.TextInputFormat",
      "Location": {
       "Fn::Join": [
        "",
        [
         "s3://admin-console-new-",
         {
          "Ref": "AWS::AccountId"
         },
         "/monitoring/quicksight/datasource_property"
        ]
       ]
      },
      "OutputFormat": "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat",
      "SerdeInfo": {
       "Parameters": {
        "field.delim": ","
       },
       "SerializationLibrary": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe"
      },
      "StoredAsSubDirectories": false
     },
     "TableType": "EXTERNAL_TABLE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "QuickAdminSuiteDataModelStack/DatasourcePropertyTable"
   }
  },
  "CwQsDsTable": {
   "Type": "AWS::Glue::Table",
   "Properties": {
    "CatalogId": {
     "Ref": "AWS::AccountId"
    },
    "DatabaseName": {
     "Ref": "adminconsoledb2025"
    },
    "TableInput": {
     "Description": "CloudWatch Metrics Stream data for QuickSight",
     "Name": {
      "Fn::Join": [
       "",
       [
        "cw_qs_ds_",
        {
         "Ref": "AWS::AccountId"
        }
       ]
      ]
     },
     "Parameters": {
      "classification": "json",
      "partition_filtering.enabled": "true"
     },
     "PartitionKeys": [
      {
       "Name": "partition_0",
       "Type": "string"
      },
      {
       "Name": "partition_1",
       "Type": "string"
      },
      {
       "Name": "partition_2",
       "Type": "string"
      },
      {
       "Name": "partition_3",
       "Type": "string"
      }
     ],
     "StorageDescriptor": {
      "Columns": [
       {
        "Comment": "from deserializer",
        "Name": "metric_stream_name",
        "Type": "string"
       },
       {
        "Comment": "from deserializer",
        "Name": "account_id",
        "Type": "string"
       },
       {
        "Comment": "from deserializer",
        "Name": "region",
        "Type": "string"
       },
       {
        "Comment": "from deserializer",
        "Name": "namespace",
        "Type": "string"
       },
       {
        "Comment": "from deserializer",
        "Name": "metric_name",
        "Type": "string"
       },
       {
        "Comment": "from deserializer",
        "Name": "dimensions",
        "Type": "struct<DatasetId:string>"
       },
       {
        "Comment": "from deserializer",
        "Name": "timestamp",
        "Type": "bigint"
       },
       {
        "Comment": "from deserializer",
        "Name": "value",
        "Type": "struct<max:double,min:double,sum:double,count:double>"
       },
       {
        "Comment": "from deserializer",
        "Name": "unit",
        "Type": "string"
       }
      ],
      "InputFormat": "org.apache.hadoop.mapred.TextInputFormat",
      "Location": {
       "Fn::Join": [
        "",
        [
         "s3://cw-qs-ds-",
         {
          "Ref": "AWS::AccountId"
         },
         "/"
        ]
       ]
      },
      "OutputFormat": "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat",
      "SerdeInfo": {
       "Parameters": {
        "paths": "account_id,dimensions,metric_name,metric_stream_name,namespace,region,timestamp,unit,value"
       },
       "SerializationLibrary": "org.openx.data.jsonserde.JsonSerDe"
      }
     },
     "TableType": "EXTERNAL_TABLE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "QuickAdminSuiteDataModelStack/CwQsDsTable"
   }
  },
  "CwQsDashVisualTable": {
   "Type": "AWS::Glue::Table",
   "Properties": {
    "CatalogId": {
     "Ref": "AWS::AccountId"
    },
    "DatabaseName": {
     "Ref": "adminconsoledb2025"
    },
    "TableInput": {
     "Description": "CloudWatch Metrics Stream data for QuickSight Dashboard Visual",
     "Name": {
      "Fn::Join": [
       "",
       [
        "cw_qs_dash_visual_",
        {
         "Ref": "AWS::AccountId"
        }
       ]
      ]
     },
     "Parameters": {
      "classification": "json",
      "partition_filtering.enabled": "true"
     },
     "PartitionKeys": [
      {
       "Name": "partition_0",
       "Type": "string"
      },
      {
       "Name": "partition_1",
       "Type": "string"
      },
      {
       "Name": "partition_2",
       "Type": "string"
      },
      {
       "Name": "partition_3",
       "Type": "string"
      }
     ],
     "StorageDescriptor": {
      "Columns": [
       {
        "Comment": "from deserializer",
        "Name": "metric_stream_name",
        "Type": "string"
       },
       {
        "Comment": "from deserializer",
        "Name": "account_id",
        "Type": "string"
       },
       {
        "Comment": "from deserializer",
        "Name": "region",
        "Type": "string"
       },
       {
        "Comment": "from deserializer",
        "Name": "namespace",
        "Type": "string"
       },
       {
        "Comment": "from deserializer",
        "Name": "metric_name",
        "Type": "string"
       },
       {
        "Comment": "from deserializer",
        "Name": "dimensions",
        "Type": "struct<DashboardId:string,SheetId:string,VisualId:string>"
       },
       {
        "Comment": "from deserializer",
        "Name": "timestamp",
        "Type": "bigint"
       },
       {
        "Comment": "from deserializer",
        "Name": "value",
        "Type": "struct<max:double,min:double,sum:double,count:double>"
       },
       {
        "Comment": "from deserializer",
        "Name": "unit",
        "Type": "string"
       }
      ],
      "InputFormat": "org.apache.hadoop.mapred.TextInputFormat",
      "Location": {
       "Fn::Join": [
        "",
        [
         "s3://cw-qs-dash-visual-",
         {
          "Ref": "AWS::AccountId"
         },
         "/"
        ]
       ]
      },
      "OutputFormat": "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat",
      "SerdeInfo": {
       "Parameters": {
        "paths": "account_id,dimensions,metric_name,metric_stream_name,namespace,region,timestamp,unit,value"
       },
       "SerializationLibrary": "org.openx.data.jsonserde.JsonSerDe"
      }
     },
     "TableType": "EXTERNAL_TABLE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "QuickAdminSuiteDataModelStack/CwQsDashVisualTable"
   }
  },
  "CwQsSpiceTable": {
   "Type": "AWS::Glue::Table",
   "Properties": {
    "CatalogId": {
     "Ref": "AWS::AccountId"
    },
    "DatabaseName": {
     "Ref": "adminconsoledb2025"
    },
    "TableInput": {
     "Description": "CloudWatch Metrics Stream data for QuickSight SPICE",
     "Name": {
      "Fn::Join": [
       "",
       [
        "cw_qs_spice_",
        {
         "Ref": "AWS::AccountId"
        }
       ]
      ]
     },
     "Parameters": {
      "classification": "json",
      "partition_filtering.enabled": "true"
     },
     "PartitionKeys": [
      {
       "Name": "partition_0",
       "Type": "string"
      },
      {
       "Name": "partition_1",
       "Type": "string"
      },
      {
       "Name": "partition_2",
       "Type": "string"
      },
      {
       "Name": "partition_3",
       "Type": "string"
      }
     ],
     "StorageDescriptor": {
      "Columns": [
       {
        "Comment": "from deserializer",
        "Name": "metric_stream_name",
        "Type": "string"
       },
       {
        "Comment": "from deserializer",
        "Name": "account_id",
        "Type": "string"
       },
       {
        "Comment": "from deserializer",
        "Name": "region",
        "Type": "string"
       },
       {
        "Comment": "from deserializer",
        "Name": "namespace",
        "Type": "string"
       },
       {
        "Comment": "from deserializer",
        "Name": "metric_name",
        "Type": "string"
       },
       {
        "Comment": "from deserializer",
        "Name": "dimensions",
        "Type": "struct<AccountId:string>"
       },
       {
        "Comment": "from deserializer",
        "Name": "timestamp",
        "Type": "bigint"
       },
       {
        "Comment": "from deserializer",
        "Name": "value",
        "Type": "struct<max:double,min:double,sum:double,count:double>"
       },
       {
        "Comment": "from deserializer",
        "Name": "unit",
        "Type": "string"
       }
      ],
      "InputFormat": "org.apache.hadoop.mapred.TextInputFormat",
      "Location": {
       "Fn::Join": [
        "",
        [
         "s3://cw-qs-spice-",
         {
          "Ref": "AWS::AccountId"
         },
         "/"
        ]
       ]
      },
      "OutputFormat": "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat",
      "SerdeInfo": {
       "Parameters": {
        "paths": "account_id,dimensions,metric_name,metric_stream_name,namespace,region,timestamp,unit,value"
       },
       "SerializationLibrary": "org.openx.data.jsonserde.JsonSerDe"
      }
     },
     "TableType": "EXTERNAL_TABLE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "QuickAdminSuiteDataModelStack/CwQsSpiceTable"
   }
  },
  "CrawlerCwQsDs": {
   "Type": "AWS::Glue::Crawler",
   "Properties": {
    "Role": {
     "Fn::Join": [
      "",
      [
       "arn:aws:iam::",
       {
        "Ref": "AWS::AccountId"
       },
       ":role/QuickSightAdminConsole2025"
      ]
     ]
    },
    "Targets": {
     "S3Targets": [
      {
       "Path": {
        "Fn::Join": [
         "",
         [
          "s3://cw-qs-ds-",
          {
           "Ref": "AWS::AccountId"
          },
          "/"
         ]
        ]
       }
      }
     ]
    },
    "Configuration": "{\"Version\": 1.0, \"CrawlerOutput\": {\"Partitions\": {\"AddOrUpdateBehavior\": \"InheritFromTable\"}, \"Tables\": {\"AddOrUpdateBehavior\": \"MergeNewColumns\"}}, \"Grouping\": {\"TableGroupingPolicy\": \"CombineCompatibleSchemas\"}, \"CreatePartitionIndex\": true}",
    "DatabaseName": "admin-console-2025",
    "Name": "crawler-cw-qs-ds",
    "RecrawlPolicy": {
     "RecrawlBehavior": "CRAWL_EVERYTHING"
    },
    "SchemaChangePolicy": {
     "DeleteBehavior": "DEPRECATE_IN_DATABASE",
     "UpdateBehavior": "UPDATE_IN_DATABASE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "QuickAdminSuiteDataModelStack/CrawlerCwQsDs"
   }
  },
  "CrawlerCwQsSpice": {
   "Type": "AWS::Glue::Crawler",
   "Properties": {
    "Role": {
     "Fn::Join": [
      "",
      [
       "arn:aws:iam::",
       {
        "Ref": "AWS::AccountId"
       },
       ":role/QuickSightAdminConsole2025"
      ]
     ]
    },
    "Targets": {
     "S3Targets": [
      {
       "Path": {
        "Fn::Join": [
         "",
         [
          "s3://cw-qs-spice-",
          {
           "Ref": "AWS::AccountId"
          },
          "/"
         ]
        ]
       }
      }
     ]
    },
    "Configuration": "{\"Version\": 1.0, \"CrawlerOutput\": {\"Partitions\": {\"AddOrUpdateBehavior\": \"InheritFromTable\"}, \"Tables\": {\"AddOrUpdateBehavior\": \"MergeNewColumns\"}}, \"Grouping\": {\"TableGroupingPolicy\": \"CombineCompatibleSchemas\"}, \"CreatePartitionIndex\": true}",
    "DatabaseName": "admin-console-2025",
    "Name": "crawler-cw-qs-spice",
    "RecrawlPolicy": {
     "RecrawlBehavior": "CRAWL_EVERYTHING"
    },
    "SchemaChangePolicy": {
     "DeleteBehavior": "DEPRECATE_IN_DATABASE",
     "UpdateBehavior": "UPDATE_IN_DATABASE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "QuickAdminSuiteDataModelStack/CrawlerCwQsSpice"
   }
  },
  "CrawlerCwQsDashVisual": {
   "Type": "AWS::Glue::Crawler",
   "Properties": {
    "Role": {
     "Fn::Join": [
      "",
      [
       "arn:aws:iam::",
       {
        "Ref": "AWS::AccountId"
       },
       ":role/QuickSightAdminConsole2025"
      ]
     ]
    },
    "Targets": {
     "S3Targets": [
      {
       "Path": {
        "Fn::Join": [
         "",
         [
          "s3://cw-qs-dash-visual-",
          {
           "Ref": "AWS::AccountId"
          },
          "/"
         ]
        ]
       }
      }
     ]
    },
    "Configuration": "{\"Version\": 1.0, \"CrawlerOutput\": {\"Partitions\": {\"AddOrUpdateBehavior\": \"InheritFromTable\"}, \"Tables\": {\"AddOrUpdateBehavior\": \"MergeNewColumns\"}}, \"Grouping\": {\"TableGroupingPolicy\": \"CombineCompatibleSchemas\"}, \"CreatePartitionIndex\": true}",
    "DatabaseName": "admin-console-2025",
    "Name": "crawler-cw-qs-dash-visual",
    "RecrawlPolicy": {
     "RecrawlBehavior": "CRAWL_EVERYTHING"
    },
    "SchemaChangePolicy": {
     "DeleteBehavior": "DEPRECATE_IN_DATABASE",
     "UpdateBehavior": "UPDATE_IN_DATABASE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "QuickAdminSuiteDataModelStack/CrawlerCwQsDashVisual"
   }
  },
  "CrawlerCwQsDsAddPart": {
   "Type": "AWS::Glue::Crawler",
   "Properties": {
    "Role": {
     "Fn::Join": [
      "",
      [
       "arn:aws:iam::",
       {
        "Ref": "AWS::AccountId"
       },
       ":role/QuickSightAdminConsole2025"
      ]
     ]
    },
    "Targets": {
     "CatalogTargets": [
      {
       "DatabaseName": "admin-console-2025",
       "Tables": [
        {
         "Fn::Join": [
          "",
          [
           "cw_qs_ds_",
           {
            "Ref": "AWS::AccountId"
           }
          ]
         ]
        }
       ]
      }
     ]
    },
    "Configuration": "{\"Version\": 1.0, \"CrawlerOutput\": {\"Partitions\": {\"AddOrUpdateBehavior\": \"InheritFromTable\"}, \"Tables\": {\"AddOrUpdateBehavior\": \"MergeNewColumns\"}}}",
    "DatabaseName": "admin-console-2025",
    "Name": "crawler-cw-qs-ds-add-part",
    "Schedule": {
     "ScheduleExpression": "cron(0 * * * ? *)"
    },
    "SchemaChangePolicy": {
     "DeleteBehavior": "LOG",
     "UpdateBehavior": "UPDATE_IN_DATABASE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "QuickAdminSuiteDataModelStack/CrawlerCwQsDsAddPart"
   }
  },
  "QuickSightCrudEventsView": {
   "Type": "AWS::Athena::NamedQuery",
   "Properties": {
    "Database": "admin-console-2025",
    "QueryString": "CREATE OR REPLACE VIEW quicksight_crud_events AS \nSELECT *\nFROM cloudtrail_logs_pp\nWHERE (\n  eventsource = 'quicksight.amazonaws.com'\n  AND parse_datetime(eventtime, 'yyyy-MM-dd''T''HH:mm:ss''Z') >= (current_timestamp - INTERVAL '40' DAY)\n  AND REGEXP_LIKE(eventname, '^(Create|Update|Delete)')\n)",
    "Description": "View for QuickSight CRUD events from CloudTrail logs",
    "Name": "quicksight_crud_events_view",
    "WorkGroup": "primary"
   },
   "Metadata": {
    "aws:cdk:path": "QuickAdminSuiteDataModelStack/QuickSightCrudEventsView"
   }
  },
  "QuickSightQueryDbEventsView": {
   "Type": "AWS::Athena::NamedQuery",
   "Properties": {
    "Database": "admin-console-2025",
    "QueryString": "CREATE OR REPLACE VIEW quicksight_querydb_events AS \nSELECT\n  *\n, JSON_EXTRACT_SCALAR(serviceeventdetails, '$.eventRequestDetails.dataSourceId') datasourceid\n, JSON_EXTRACT_SCALAR(serviceeventdetails, '$.eventRequestDetails.queryId') queryid\n, JSON_EXTRACT_SCALAR(serviceeventdetails, '$.eventRequestDetails.resourceId') dashboard_analysis\n, JSON_EXTRACT_SCALAR(serviceeventdetails, '$.eventRequestDetails.dataSetId') datasetid\n, JSON_EXTRACT_SCALAR(serviceeventdetails, '$.eventRequestDetails.dataSetMode') datasetmode\nFROM cloudtrail_logs_pp\nWHERE ((eventsource = 'quicksight.amazonaws.com') AND (parse_datetime(eventtime, 'yyyy-MM-dd''T''HH:mm:ss''Z') >= (current_timestamp - INTERVAL '40' DAY)) AND (eventname = 'QueryDatabase'))",
    "Description": "View for QuickSight QueryDatabase events from CloudTrail logs",
    "Name": "quicksight_querydb_events_view",
    "WorkGroup": "primary"
   },
   "Metadata": {
    "aws:cdk:path": "QuickAdminSuiteDataModelStack/QuickSightQueryDbEventsView"
   }
  },
  "QsUsageCurView": {
   "Type": "AWS::Athena::NamedQuery",
   "Properties": {
    "Database": "admin-console-2025",
    "QueryString": {
     "Fn::Join": [
      "",
      [
       "CREATE OR REPLACE VIEW \"qs_usage_cur_vw\" AS \nSELECT\n  bill_payer_account_id\n, line_item_usage_account_id\n, concat(DATE_FORMAT(line_item_usage_start_date, '%Y-%m'), '-01') month_line_item_usage_start_date\n, line_item_usage_type\n, (CASE WHEN (LOWER(line_item_usage_type) LIKE 'qs-user-enterprise%') THEN 'Users - Enterprise' WHEN (LOWER(line_item_usage_type) LIKE 'qs-user-standard%') THEN 'Users - Standard' WHEN (LOWER(line_item_usage_type) LIKE 'qs-reader%') THEN 'Reader Usage' WHEN (LOWER(line_item_usage_type) LIKE '%spice') THEN 'SPICE' WHEN (LOWER(line_item_usage_type) LIKE '%alerts%') THEN 'Alerts' WHEN (LOWER(line_item_usage_type) LIKE '%-q%') THEN 'QuickSight Q' WHEN (LOWER(line_item_usage_type) LIKE '%-report%') THEN 'Paginated Reporting' WHEN (LOWER(line_item_usage_type) LIKE '%-reader-pro%') THEN 'Reader PRO' WHEN (LOWER(line_item_usage_type) LIKE '%-author-pro%') THEN 'Author PRO' WHEN (LOWER(line_item_usage_type) LIKE '%-reader-enterprise%') THEN 'Reader Usage' ELSE line_item_usage_type END) qs_usage_type\n, line_item_line_item_description\n, line_item_line_item_type\n, product['group'] product_group\n, pricing_unit\n, line_item_resource_id\n, product_usagetype\n, line_item_unblended_rate\n, line_item_blended_rate\n, line_item_operation\n, SUM(CAST(line_item_usage_amount AS DOUBLE)) sum_line_item_usage_amount\n, SUM(CAST(line_item_unblended_cost AS DECIMAL(16, 8))) sum_line_item_unblended_cost\n, SUM(CAST(line_item_blended_cost AS DECIMAL(16, 8))) line_item_blended_cost\nFROM ",
       {
        "Ref": "CURSourceTable"
       },
       "\nWHERE ((product['product_name'] = 'Amazon QuickSight') AND (line_item_line_item_type IN ('DiscountedUsage', 'Usage')))\nGROUP BY bill_payer_account_id, line_item_usage_account_id, DATE_FORMAT(line_item_usage_start_date, '%Y-%m'), 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14\nORDER BY month_line_item_usage_start_date ASC, sum_line_item_unblended_cost DESC, month_line_item_usage_start_date ASC, sum_line_item_unblended_cost DESC"
      ]
     ]
    },
    "Description": "QuickSight usage and cost analysis view from CUR data",
    "Name": "qs_usage_cur_vw",
    "WorkGroup": "primary"
   },
   "Metadata": {
    "aws:cdk:path": "QuickAdminSuiteDataModelStack/QsUsageCurView"
   }
  },
  "CwQsDsPivotView": {
   "Type": "AWS::Athena::NamedQuery",
   "Properties": {
    "Database": "admin-console-2025",
    "QueryString": {
     "Fn::Join": [
      "",
      [
       "CREATE OR REPLACE VIEW cw_qs_ds_pivot AS \nSELECT\n  timestamp\n, account_id\n, region\n, dimensions.datasetid datasetid\n, CAST(MAX((CASE WHEN (metric_name = 'IngestionErrorCount') THEN value.sum END)) AS INTEGER) IngestionErrorCount\n, MAX((CASE WHEN (metric_name = 'IngestionErrorCount') THEN unit END)) IngestionErrorCount_Unit\n, CAST(MAX((CASE WHEN (metric_name = 'IngestionInvocationCount') THEN value.sum END)) AS INTEGER) IngestionInvocationCount\n, MAX((CASE WHEN (metric_name = 'IngestionInvocationCount') THEN unit END)) IngestionInvocationCount_Unit\n, CAST(MAX((CASE WHEN (metric_name = 'IngestionLatency') THEN value.sum END)) AS DOUBLE) IngestionLatency\n, MAX((CASE WHEN (metric_name = 'IngestionLatency') THEN unit END)) IngestionLatency_Unit\n, CAST(MAX((CASE WHEN (metric_name = 'IngestionRowCount') THEN value.sum END)) AS INTEGER) IngestionRowCount\n, MAX((CASE WHEN (metric_name = 'IngestionRowCount') THEN unit END)) IngestionRowCount_Unit\nFROM cw_qs_ds_",
       {
        "Ref": "AWS::AccountId"
       },
       "\nGROUP BY timestamp, account_id, region, dimensions\nORDER BY timestamp ASC, account_id ASC, region ASC"
      ]
     ]
    },
    "Description": "Pivot view for CloudWatch QuickSight dataset metrics",
    "Name": "cw_qs_ds_pivot_view",
    "WorkGroup": "primary"
   },
   "Metadata": {
    "aws:cdk:path": "QuickAdminSuiteDataModelStack/CwQsDsPivotView"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/yWLwQ6CMBBEv4V7WQX5AzwbRO9mgVUqpU222xBC+u8WOc3kzZsSqgrOGS4+74cpN7qD7SHYT6p+2wYZZxJilfbX9jGBYEv8ioIdetqdJ3bmX2rGxRBHhTKSRUjolt7DPRCvcTda8i5wf9jODlq0s1E1q4zOni5QlFAU2ddrnXOwomeC9sgfFFesOqYAAAA="
   },
   "Metadata": {
    "aws:cdk:path": "QuickAdminSuiteDataModelStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}