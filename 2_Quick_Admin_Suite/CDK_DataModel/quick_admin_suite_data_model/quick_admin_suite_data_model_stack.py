from aws_cdk import (
    Stack,
    CfnParameter,
    aws_glue as glue,
    aws_athena as athena,
)
from constructs import Construct
from .cloudwatch_tables import create_cloudwatch_tables
from .crawlers import create_crawlers
from .athena_views import create_athena_views

class QuickAdminSuiteDataModelStack(Stack):

    def __init__(self, scope: Construct, construct_id: str, **kwargs) -> None:
        super().__init__(scope, construct_id, **kwargs)

        # Parameters
        cloudtrail_location = CfnParameter(
            self, "CloudtrailLocation",
            type="String",
            min_length=1,
            description="Enter the location of your trail as specified in the Cloudtrail console, start with s3://, end with CloudTrail/. example: s3://cloudtrail-awslogs-123456789123-do-not-delete/AWSLogs/123456789123/CloudTrail/"
        )

        start_date_parameter = CfnParameter(
            self, "StartDateParameter",
            type="String",
            min_length=10,
            description="Input the start date for the data in the Cloudtrail bucket in YYYY/MM/DD format. For example, if the earliest data in the bucket is from 1st August 2021, use 2021/08/01"
        )

        cur_source_table = CfnParameter(
            self, "CURSourceTable",
            type="String",
            description="Provide CUR database and table name with format database.table_name as it exists in your account (e.g., billing.cur)",
            allowed_pattern="^[a-zA-Z0-9_-]+\\.[a-zA-Z0-9_-]+$",
            constraint_description="Must be in format database.table_name",
            min_length=3
        )

        # Glue Database
        admin_console_db = glue.CfnDatabase(
            self, "adminconsoledb2025",
            catalog_id=self.account,
            database_input=glue.CfnDatabase.DatabaseInputProperty(
                name="admin-console-2025"
            )
        )

        # Group Membership Table
        group_membership_table = glue.CfnTable(
            self, "groupmembership",
            catalog_id=self.account,
            database_name=admin_console_db.ref,
            table_input=glue.CfnTable.TableInputProperty(
                description="group and user information which is generated by the etl_job_admin_suite_assets_access glue job",
                name="group_membership",
                parameters={
                    "has_encrypted_data": "false",
                    "classification": "csv",
                    "areColumnsQuoted": "false",
                    "typeOfData": "file",
                    "columnsOrdered": "true",
                    "delimiter": ","
                },
                storage_descriptor=glue.CfnTable.StorageDescriptorProperty(
                    columns=[
                        glue.CfnTable.ColumnProperty(name="account_id", type="string", comment="aws account_id"),
                        glue.CfnTable.ColumnProperty(name="namespace", type="string", comment="quicksight namespace"),
                        glue.CfnTable.ColumnProperty(name="group", type="string", comment="quicksight group"),
                        glue.CfnTable.ColumnProperty(name="user", type="string", comment="quicksight user"),
                        glue.CfnTable.ColumnProperty(name="email", type="string", comment="email of quicksight user"),
                        glue.CfnTable.ColumnProperty(name="role", type="string", comment="role of quicksight user: admin, author, reader"),
                        glue.CfnTable.ColumnProperty(name="identity_type", type="string", comment="identity_type of quicksight user: IAM, quicksight"),
                        glue.CfnTable.ColumnProperty(name="user_arn", type="string", comment="arn of user")
                    ],
                    compressed=False,
                    input_format="org.apache.hadoop.mapred.TextInputFormat",
                    location=f"s3://admin-console-new-{self.account}/monitoring/quicksight/group_membership",
                    output_format="org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat",
                    serde_info=glue.CfnTable.SerdeInfoProperty(
                        parameters={"field.delim": ","},
                        serialization_library="org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe"
                    ),
                    stored_as_sub_directories=False
                ),
                table_type="EXTERNAL_TABLE"
            )
        )

        # Object Access Table
        object_access_table = glue.CfnTable(
            self, "objectaccess",
            catalog_id=self.account,
            database_name=admin_console_db.ref,
            table_input=glue.CfnTable.TableInputProperty(
                description="objects and access information which is generated by the etl_job_admin_suite_assets_access glue job",
                name="object_access",
                parameters={
                    "has_encrypted_data": "false",
                    "classification": "csv",
                    "areColumnsQuoted": "false",
                    "typeOfData": "file",
                    "columnsOrdered": "true",
                    "delimiter": ","
                },
                storage_descriptor=glue.CfnTable.StorageDescriptorProperty(
                    columns=[
                        glue.CfnTable.ColumnProperty(name="account_id", type="string", comment="aws account_id"),
                        glue.CfnTable.ColumnProperty(name="aws_region", type="string", comment="aws region name"),
                        glue.CfnTable.ColumnProperty(name="object_type", type="string", comment="quicksight object type: dashboard, dataset and etc.."),
                        glue.CfnTable.ColumnProperty(name="object_name", type="string", comment="quicksight object name"),
                        glue.CfnTable.ColumnProperty(name="object_id", type="string", comment="quicksight object id"),
                        glue.CfnTable.ColumnProperty(name="principal_type", type="string", comment="quicksight principal type"),
                        glue.CfnTable.ColumnProperty(name="principal_name", type="string", comment="quicksight principal name"),
                        glue.CfnTable.ColumnProperty(name="arn", type="string", comment="quicksight principal arn"),
                        glue.CfnTable.ColumnProperty(name="namespace", type="string", comment="quicksight namespace"),
                        glue.CfnTable.ColumnProperty(name="permissions", type="string", comment="access permissions of quicksight objects: who can do what on a dashboard")
                    ],
                    compressed=False,
                    input_format="org.apache.hadoop.mapred.TextInputFormat",
                    location=f"s3://admin-console-new-{self.account}/monitoring/quicksight/object_access",
                    output_format="org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat",
                    serde_info=glue.CfnTable.SerdeInfoProperty(
                        parameters={"field.delim": ","},
                        serialization_library="org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe"
                    ),
                    stored_as_sub_directories=False
                ),
                table_type="EXTERNAL_TABLE"
            )
        )

        # Datasets Properties Table
        datasets_properties_table = glue.CfnTable(
            self, "datasetsproperties",
            catalog_id=self.account,
            database_name=admin_console_db.ref,
            table_input=glue.CfnTable.TableInputProperty(
                description="datasets properties information which is generated by the etl_job_admin_suite_ds_properties job",
                name="datasets_properties",
                parameters={
                    "classification": "csv",
                    "skip.header.line.count": "1"
                },
                storage_descriptor=glue.CfnTable.StorageDescriptorProperty(
                    columns=[
                        glue.CfnTable.ColumnProperty(name="region", type="string", comment="aws region name"),
                        glue.CfnTable.ColumnProperty(name="dataset_id", type="string", comment="dataset id"),
                        glue.CfnTable.ColumnProperty(name="name", type="string", comment="dataset name"),
                        glue.CfnTable.ColumnProperty(name="last_updated_time", type="string", comment="last updated time"),
                        glue.CfnTable.ColumnProperty(name="import_mode", type="string", comment="import mode (SPICE or DIRECT_QUERY)"),
                        glue.CfnTable.ColumnProperty(name="consumed_spice_capacity_bytes", type="string", comment="consumed SPICE capacity in bytes"),
                        glue.CfnTable.ColumnProperty(name="rows_ingested", type="string", comment="rows ingested"),
                        glue.CfnTable.ColumnProperty(name="rows_dropped", type="string", comment="rows dropped"),
                        glue.CfnTable.ColumnProperty(name="refresh_triggered_time", type="string", comment="refresh triggered time"),
                        glue.CfnTable.ColumnProperty(name="refresh_time_seconds", type="string", comment="refresh time in seconds"),
                        glue.CfnTable.ColumnProperty(name="request_source", type="string", comment="request source"),
                        glue.CfnTable.ColumnProperty(name="request_type", type="string", comment="request type"),
                        glue.CfnTable.ColumnProperty(name="ingestion_status", type="string", comment="ingestion status"),
                        glue.CfnTable.ColumnProperty(name="error_info_type", type="string", comment="error info type"),
                        glue.CfnTable.ColumnProperty(name="error_info_message", type="string", comment="error info message"),
                        glue.CfnTable.ColumnProperty(name="principal_type", type="string", comment="principal type"),
                        glue.CfnTable.ColumnProperty(name="principal", type="string", comment="principal name"),
                        glue.CfnTable.ColumnProperty(name="additional_info", type="string", comment="additional info"),
                        glue.CfnTable.ColumnProperty(name="actions", type="string", comment="actions"),
                        glue.CfnTable.ColumnProperty(name="is_file", type="string", comment="is file indicator")
                    ],
                    compressed=False,
                    input_format="org.apache.hadoop.mapred.TextInputFormat",
                    location=f"s3://admin-console-new-{self.account}/monitoring/quicksight/datasets_properties",
                    output_format="org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat",
                    serde_info=glue.CfnTable.SerdeInfoProperty(
                        parameters={"field.delim": ","},
                        serialization_library="org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe"
                    ),
                    stored_as_sub_directories=False
                ),
                table_type="EXTERNAL_TABLE"
            )
        )

        # Datasource Property Table
        datasource_property_table = glue.CfnTable(
            self, "DatasourcePropertyTable",
            catalog_id=self.account,
            database_name="admin-console-2025",
            table_input=glue.CfnTable.TableInputProperty(
                name="datasource_property",
                description="QuickSight dataset to datasource dependency mapping",
                storage_descriptor=glue.CfnTable.StorageDescriptorProperty(
                    columns=[
                        glue.CfnTable.ColumnProperty(name="region", type="string", comment="AWS region"),
                        glue.CfnTable.ColumnProperty(name="datasource_name", type="string", comment="data source name"),
                        glue.CfnTable.ColumnProperty(name="datasource_id", type="string", comment="data source ID"),
                        glue.CfnTable.ColumnProperty(name="dataset_name", type="string", comment="dataset name"),
                        glue.CfnTable.ColumnProperty(name="datasource_type", type="string", comment="data source type"),
                        glue.CfnTable.ColumnProperty(name="dataset_id", type="string", comment="dataset ID"),
                        glue.CfnTable.ColumnProperty(name="dataset_last_updated_time", type="string", comment="dataset last updated time"),
                        glue.CfnTable.ColumnProperty(name="dataset_created_time", type="string", comment="dataset created time")
                    ],
                    compressed=False,
                    input_format="org.apache.hadoop.mapred.TextInputFormat",
                    location=f"s3://admin-console-new-{self.account}/monitoring/quicksight/datasource_property",
                    output_format="org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat",
                    serde_info=glue.CfnTable.SerdeInfoProperty(
                        parameters={"field.delim": ","},
                        serialization_library="org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe"
                    ),
                    stored_as_sub_directories=False
                ),
                table_type="EXTERNAL_TABLE"
            )
        )

        # Create CloudWatch tables
        cw_tables = create_cloudwatch_tables(self, admin_console_db)
        
        # Create crawlers
        crawlers = create_crawlers(self)
        
        # Create Athena views
        athena_views = create_athena_views(self, cur_source_table)